@use "sass:meta";

@function light-dark-oklch($argument-1, $argument-2: null, $alpha: null) {
  @if meta.type-of($argument-1) == "map" {
    $light: map-get($argument-1, light);
    $dark: map-get($argument-1, dark);

    $light-l: map-get($light, l);
    $light-c: if(
      map-has-key($light, c),
      map-get($light, c),
      var(--base-chroma)
    );
    $light-h: if(map-has-key($light, h), map-get($light, h), var(--base-hue));
    $light-a: if(
      $alpha != null,
      $alpha,
      if(map-has-key($light, a), map-get($light, a), 1)
    );

    $dark-l: map-get($dark, l);
    $dark-c: if(map-has-key($dark, c), map-get($dark, c), var(--base-chroma));
    $dark-h: if(map-has-key($dark, h), map-get($dark, h), var(--base-hue));
    $dark-a: if(
      $alpha != null,
      $alpha,
      if(map-has-key($dark, a), map-get($dark, a), 1)
    );

    $light-color: oklch($light-l $light-c $light-h / $light-a);
    $dark-color: oklch($dark-l $dark-c $dark-h / $dark-a);

    @return light-dark($light-color, $dark-color);
  } @else if $argument-2 != null {
    $light-color: oklch(
      $argument-1 var(--base-chroma) var(--base-hue) / if($alpha != null, $alpha, 1)
    );
    $dark-color: oklch(
      $argument-2 var(--base-chroma) var(--base-hue) / if($alpha != null, $alpha, 1)
    );
    @return light-dark($light-color, $dark-color);
  } @else {
    @error "Invalid arguments for light-dark-oklch";
  }
}

:root {
  --base-hue: 36;
  --base-saturation: 0%;
  --base-chroma: 0.02;

  --primary: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 45%),
    hsl(var(--base-hue), var(--base-saturation), 75%)
  );
  --primary-text: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 96%),
    hsl(var(--base-hue), var(--base-saturation), 8%)
  );
  --primary-hover: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 48%),
    hsl(var(--base-hue), var(--base-saturation), 74%)
  );
  --primary-active: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 34%),
    hsl(var(--base-hue), var(--base-saturation), 60%)
  );
  --primary-disabled: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 45%, 0.2),
    hsl(var(--base-hue), var(--base-saturation), 78%, 0.2)
  );

  --outline: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 45%),
    hsl(var(--base-hue), var(--base-saturation), 75%)
  );

  --text: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 16%),
    hsl(var(--base-hue), var(--base-saturation), 90%)
  );
  --text-disabled: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 8%, 0.3),
    hsl(var(--base-hue), var(--base-saturation), 90%, 0.3)
  );
  --placeholder: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 10%, 0.7),
    hsl(var(--base-hue), var(--base-saturation), 92%, 0.5)
  );

  --selection-background: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 12%),
    hsl(var(--base-hue), var(--base-saturation), 88%)
  );
  --selection-text: var(--primary-text);

  --background: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 100%),
    hsl(var(--base-hue), var(--base-saturation), 10%)
  );
  --surface: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 95%),
    hsl(var(--base-hue), var(--base-saturation), 6%)
  );
  --surface-emphasis: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 90%),
    hsl(var(--base-hue), var(--base-saturation), 14%)
  );
  --surface-shadow: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 32%, 0.5),
    hsl(var(--base-hue), var(--base-saturation), 24%, 0.5)
  );

  --scrollbar-surface: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 80%),
    hsl(var(--base-hue), var(--base-saturation), 18%)
  );
  --scrollbar-surface-hover: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 64%),
    hsl(var(--base-hue), var(--base-saturation), 22%)
  );
  --scrollbar-surface-active: light-dark(
    hsl(var(--base-hue), var(--base-saturation), 60%),
    hsl(var(--base-hue), var(--base-saturation), 28%)
  );

  // ---
  --color-background: #{light-dark-oklch(100%, 20%)};
  --color-text: #{light-dark-oklch(28%, 90%)};

  --color-focus-outline: #{light-dark-oklch(60%, 75%)};

  --color-control-hover: #{light-dark-oklch(90%, 14%)};
  --color-control-hover: #{light-dark-oklch(80%, 32%)};
  --color-control-active: #{light-dark-oklch(74%, 36%)};
  --color-control-disabled: #{light-dark-oklch(90%, 30%)};

  --color-scrollbar-surface: #{light-dark-oklch(80%, 28%)};
  --color-scrollbar-surface-hover: #{light-dark-oklch(64%, 34%)};
  --color-scrollbar-surface-active: #{light-dark-oklch(60%, 36%)};

  --color-selection-background: #{light-dark-oklch(25%, 85%)};
  --color-selection-text: #{light-dark-oklch(100%, 16%)};

  --color-border-divider: #{light-dark-oklch(64%, 36%)};
  --color-border-divider-opaque: #{light-dark-oklch(64%, 34%, 0.5)};

  --color-surface: #{light-dark-oklch(95%, 15%)};
  --color-surface-emphasis: #{light-dark-oklch(92%, 26%)};

  // ---

  --font-body:
    "Work Sans", Roboto, system-ui, -apple-system, BlinkMacSystemFont,
    "Segoe UI", Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue",
    sans-serif;
  --font-mono: "Roboto Mono", monospace;
  --outline-animation: outline 0.5s cubic-bezier(0.2, 0, 0, 1) 1 forwards;

  --z-backdrop: 500;
  --z-dropdown: 1000;
  --z-overlay: 2000;
  --z-modal: 3000;
  --z-tooltip: 4000;
  --z-popup: 5000;
  --z-highest: 99999;

  --spacing-base: 0.2rem;

  --spacing-A: calc(var(--spacing-base) * 1.2);
  --spacing-B: calc(var(--spacing-base) * 1.6);
  --spacing-C: calc(var(--spacing-base) * 3.2);
  --spacing-D: calc(var(--spacing-base) * 3.8);
  --spacing-E: calc(var(--spacing-base) * 14);

  --spacing-full: 999999px;

  --seconds-S: 1s;
  --seconds-M: 1.2s;
  --seconds-L: 2.6s;

  --min-dimension: 2.444444444444444rem;
  --min-icon-dimension: 1.666666666666667rem;

  --width-small: 312px;
  --width-ample: 448px;
  --width-medium: 640px;

  --shadow-subtle: 0 0 20px hsl(0, 0%, 0%, 0.07);
  --cb-soft: cubic-bezier(0.2, 0.9, 0.65, 0.65);
  --cb-fast: cubic-bezier(0.2, 0, 0, 1);

  // ---

  --base-blur: 0.2rem;
  --blur-S: var(--base-blur);
  --blur-B: calc(var(--base-blur) * 2);
  --blur-M: calc(var(--base-blur) * 4);
}

:root[data-config-disable-blur] {
  --base-blur: 0;
}

:root {
  user-select: none;
  color-scheme: light dark;
  font-family: var(--font-body);
  font-size: 1.125rem;
  color: var(--color-text);
  interpolate-size: allow-keywords;
  letter-spacing: 0;
  word-spacing: 0;
  line-height: 1.5;
  font-weight: 400;
}

@media only screen and (min-width: 768px) {
  ::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }
}

@media only screen and (max-width: 768px) {
  ::-webkit-scrollbar {
    width: 0;
    height: 0;
  }
}

::-webkit-scrollbar-thumb {
  background-color: var(--color-scrollbar-surface);
  border-radius: 10px;
  cursor: grab;
}

@media (hover: hover) {
  ::-webkit-scrollbar-thumb:hover {
    background-color: var(--color-scrollbar-surface-hover);
  }
}

::-webkit-scrollbar-thumb:active {
  background-color: var(--color-scrollbar-surface-active);
  cursor: grabbing;
}

::-webkit-scrollbar-track {
  background-color: transparent;
}

::-webkit-scrollbar-corner {
  background-color: transparent;
}

:root,
html,
body {
  margin: 0;
  height: 100%;
  height: 100vh;
  height: 100dvh;
  overflow: hidden;
  text-align: left;
}

body {
  background-color: var(--color-background);
}

*,
*::before,
*::after {
  box-sizing: border-box;
  color: inherit;
  font-size: inherit;
}

::selection {
  background-color: var(--color-selection-background);
  color: var(--color-selection-text);
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin-block: 0.8rem;
  user-select: text;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: bold;
}

h1 {
  font-size: 2.6rem;
}

h2 {
  font-size: 2.2rem;
}

h3 {
  font-size: 1.8rem;
}

h4 {
  font-size: 1.4rem;
}

h5 {
  font-size: 1.2rem;
}

p {
  font-size: 1rem;
}

small {
  font-size: 0.833rem;
}

.very-small {
  font-size: 0.64rem;
}

:root:has(body#output-container) {
  --ptop: calc(var(--spacing-C) + var(--spacing-C) - var(--spacing-A));
  /* A value to account for Perchance's UI's toolbar */
}

button:not([disabled]),
.button:not([disabled]),
input:not([disabled]),
optgroup:not([disabled]),
select:not([disabled]),
textarea:not([disabled]) {
  color: inherit;
}

label {
  cursor: pointer;
}

a,
button,
input,
textarea {
  font-family: inherit;
  font-size: inherit;
  border: none;
  background: none;
  border-radius: 9999px;
  padding: 0.4rem;
}

input,
textarea,
select {
  background-color: var(--color-control-surface);
  border-radius: 0;
  outline: none;
}

textarea {
  resize: vertical;
}

button,
a {
  cursor: pointer;
}

button:disabled,
input:disabled,
select:disabled,
.button:disabled {
  cursor: default;
}

table {
  width: 100%;
  border-collapse: collapse;
}

th,
td {
  text-align: left;
  padding: 0.6rem;
}

img {
  max-width: 100%;
  height: auto;
}

blockquote {
  margin: 1rem 0;
  padding: 0.8rem;
  border-left: 4px solid #ccc;
  font-style: italic;
}

code {
  font-family: "Roboto Mono", monospace;
  font-size: 0.875rem;
  background-color: var(--color-control-surface);
  padding: 0.2rem 0.4rem;
  border-radius: var(--spacing-B);
}

hr {
  width: 100%;
  border: 0;
  border-top: 2px solid var(--color-border-divider);
}

fieldset {
  border: 1px solid #ccc;
  padding: 1rem;
  margin: 1rem 0;
}

legend {
  font-weight: bold;
}

c-accordian {
  display: flex;
  flex-direction: column;
}

c-accordian .head {
  min-height: 54px;
}

.backdrop {
  opacity: 0;
  visibility: hidden;
  z-index: var(--z-backdrop);
  background-color: hsl(0 0% 0% / 70%);
  backdrop-filter: var(--blur-B);
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  transition-property: option, visibility;
  transition-duration: 280ms;
  transition-timing-function: cubic-bezier(0.4, 0.8, 0.5, 1);
}

.backdrop--show {
  opacity: 1;
  visibility: visible;
}

.fade-close {
  animation: fade-close var(--seconds-S) var(--cb-soft) forwards;
}

.fade-open {
  animation: fade-open var(--seconds-S) var(--cb-soft) forwards;
}

span[class^="i-"] {
  font-weight: normal;
  font-style: normal;
  font-size: var(--min-icon-dimension);
  line-height: 1.5;
  letter-spacing: normal;
  text-transform: none;
  display: inline-flex;
  width: var(--min-icon-dimension);
  height: var(--min-icon-dimension);
  overflow: hidden;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
}

:root:not(.dev-mode) #perchance-error-indicator {
  display: none !important;
}

.perchance-error-background {
  opacity: 0.8 !important;
}

.perchance-error-content-wrapper {
  font-family: var(--font-body) !important;
  color: var(--color-text) !important;
  background-color: var(--color-surface) !important;
  border-radius: var(--spacing-D) !important;
  overflow: hidden !important;
}

.perchance-error-content-wrapper p {
  background-color: var(--color-control-surface) !important;
  color: var(--color-text) !important;
}

.perchance-error-content-wrapper button {
  color: black !important;
}

.perchance-error-content-wrapper button::before {
  content: "";
  position: absolute;
  inset: 0;
}

.perchance-error-modal-footer {
  padding: var(--spacing-C) !important;
}

.perchance-error-content-wrapper button:focus-visible {
  outline: solid gray 3px !important;
  animation: var(--outline-animation) !important;
}
.perchance-error-stream {
  user-select: auto !important;
}

.perchance-chat-container {
  display: flex;
  height: 480px;
  width: 440px;
}

.perchance-chat-container > * {
  width: 100% !important;
  height: 100% !important;
  flex: 1;
}

@media (prefers-reduced-motion: no-preference) {
  @keyframes outline {
    0% {
      outline-width: 0;
    }

    50% {
      outline-width: 8px;
    }

    100% {
      outline-width: 3px;
    }
  }
}

@keyframes ripple-animation {
  to {
    transform: scale(4);
    opacity: 1;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fade-close {
  from {
    opacity: 1;
    visibility: visible;
  }

  to {
    opacity: 0;
    visibility: hidden;
  }
}
@keyframes fade-open {
  from {
    opacity: 0;
    visibility: hidden;
  }

  to {
    opacity: 1;
    visibility: visible;
  }
}

@keyframes scale-fade-close {
  from {
    opacity: 1;
    visibility: visible;
    scale: 1;
  }

  to {
    opacity: 0;
    visibility: hidden;
    scale: 0.995;
  }
}
@keyframes scale-fade-open {
  from {
    opacity: 0;
    visibility: hidden;
    scale: 0.975;
  }

  to {
    opacity: 1;
    visibility: visible;
    scale: 1;
  }
}

@media not (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after,
  *::placeholder {
    transition-property:
      background, color, outline, opacity, scale, transform, filter,
      backdrop-filter, padding, gap, margin, border-radius, width, height,
      box-shadow, border, left, right, top, bottom, font-size, font-weight,
      letter-spacing, word-spacing, line-height, min-width, max-width,
      min-height, max-height, z-index, visibility, display, background-color,
      background-image, background-size, background-position, background-repeat,
      border-color, border-width, border-style, border-top, border-right,
      border-bottom, border-left, border-top-left-radius,
      border-top-right-radius, border-bottom-right-radius,
      border-bottom-left-radius, outline-color, outline-width, outline-style,
      text-shadow, text-decoration, text-decoration-color,
      text-decoration-style, text-decoration-thickness, text-underline-offset,
      text-transform, font-family, font-style, font-variant, font-stretch,
      font-feature-settings, font-variation-settings, filter, backdrop-filter,
      box-shadow, opacity !important;
    transition-duration: 0.2s !important;
    transition-timing-function: cubic-bezier(0.5, 0.5, 0, 1) !important;
  }
}

button,
.button,
input,
select,
textarea,
a {
  min-width: var(--min-dimension, 44px);
  min-height: var(--min-dimension, 44px);
}

textarea {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  color: inherit;
  text-align: inherit;
  border-radius: var(--spacing-C);
  margin: 0;
  padding: var(--spacing-C);
  resize: vertical;
  outline: none !important;
}

input,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  color: inherit;
  text-align: inherit;
  border-radius: var(--spacing-C);
  margin: 0;
}

/* Button */

button,
.button {
  color: var(--button-text, inherit);
  display: inline-flex;
  min-width: var(--min-dimension, 44px);
  min-height: var(--min-dimension, 44px);
  border-radius: var(--spacing-C);
  justify-content: center;
  position: relative;
  align-items: center;
  cursor: pointer;
  transition: box-shadow 0.34s ease-in-out;
  padding: 0.4rem 0.8rem;
  gap: 8px;
  outline: none;
  text-decoration: none;
}

button::before,
.button::before {
  content: "";
  position: absolute;
  inset: 0;
}

button:focus-visible,
.button:focus-visible,
select:focus-visible,
select option:focus-visible,
input:focus-visible {
  outline: solid var(--color-focus-outline);
  animation: var(--outline-animation);
}

.button--icon {
  padding: 0;
  min-width: var(--min-dimension, 44px);
  min-height: var(--min-dimension, 44px);
  width: var(--min-dimension, 44px);
  height: var(--min-dimension, 44px);
  max-width: var(--min-dimension, 44px);
  max-height: var(--min-dimension, 44px);
}

.button--secondary::after {
  content: "";
  inset: 0;
  position: absolute;
  border: 1px solid var(--primary);
  box-sizing: border-box;
  border-radius: inherit;
}

.button--primary:not(:disabled) {
  background-color: var(--primary);
  color: var(--primary-text, inherit);
  outline-offset: 3px;
}

.button--secondary:not(:disabled) {
  outline-offset: 3px;
}

@media (hover: hover) {
  button:hover:not(:disabled),
  .button:hover:not(:disabled),
  .button--hover:not(:disabled) {
    background-color: var(--color-control-hover);
  }

  .button--primary:hover:not(:disabled) {
    background-color: var(--primary-hover);
  }
}

button:active:not(:disabled),
.button:active:not(:disabled) {
  background-color: var(--color-control-active);
}

.button--active:not(:disabled) {
  background-color: var(--color-control-active);
}

.button--primary:active:not(:disabled) {
  background-color: var(--primary-active);
}

.button--secondary:disabled::after {
  border-color: var(--primary-disabled);
}

.button--rounded-S {
  border-radius: var(--spacing-B);
}

.button--rounded-M {
  border-radius: var(--spacing-D);
}

button,
.button:disabled {
  background-color: transparent;
  box-shadow: none;
  color: var(--text-disabled, inherit);
}

.button--primary:disabled {
  background-color: var(--primary-disabled);
}

input,
input[type="range"] {
  caret-color: var(--primary);
  outline-color: var(--primary);
  background-color: var(--color-control-surface);
  border-radius: var(--spacing-full);
}

input[type="text"],
input[type="search"],
input[type="email"],
input[type="password"],
input[type="tel"],
input[type="url"],
input:not([type]) {
  outline: none;
  border-radius: var(--spacing-A);
  border: 0 solid transparent;
  border-bottom-width: 3px;
  animation: none;
}

input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  cursor: pointer;
  border: none;
}

input[type="range"]:active::-webkit-slider-thumb,
input[type="range"]:active {
  cursor: grabbing;
}

input[type="range"]:active::-moz-range-thumb,
input[type="range"]:active {
  cursor: grabbing;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: calc(var(--min-dimension, 44px) - var(--spacing-C));
  height: calc(var(--min-dimension, 44px) - var(--spacing-C));
  border: none;
  border-radius: 50%;
  background-color: var(--primary);
  cursor: pointer;
}

input[type="range"]::-moz-range-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: calc(var(--min-dimension, 44px) - var(--spacing-C));
  height: calc(var(--min-dimension, 44px) - var(--spacing-C));
  border: none;
  border-radius: 50%;
  background-color: var(--primary);
  cursor: pointer;
}

select {
  background-color: var(--color-control-surface);
  border: none;
  padding: 0.5rem;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
}

select,
::picker(select) {
  appearance: base-select;
  border: none;
  outline: none;
}

::picker(select) {
  margin-block: var(--spacing-B);
  background-color: var(--color-control-surface);
  border-radius: var(--spacing-C);
  padding: var(--spacing-B);
  cursor: default;
  scrollbar-color: var(--primary);
  scrollbar-width: none;
}

::picker(select)::backdrop {
  background-color: hsl(0, 0%, 0%, 0.2);
  backdrop-filter: contrast(0.4);
}

select option {
  border: none;
  padding: var(--spacing-B);
  border-radius: var(--spacing-B);
  /* background-color: var(--color-surface); */
  cursor: pointer;
  min-width: var(--min-dimension, 44px);
  min-height: var(--min-dimension, 44px);
}

select option::checkmark {
  display: none;
}

select option:not(:last-child) {
  margin-bottom: var(--spacing-B);
}

select::picker-icon {
  color: var(--color-text);
  transition: rotate 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
}

select:open::picker-icon {
  rotate: 180deg;
}

select option:hover:not(:disabled) {
  background-color: transparent;
  /* This is to prevent browsers from applying
  a hover effect in the shadow DOM internals  */
}

@media (hover: hover) {
  input:hover:not(:disabled),
  select:hover:not(:disabled) {
    background-color: var(--color-control-hover);
  }
  select option:hover:not(:disabled) {
    background-color: var(--color-control-hover);
  }
}

input::placeholder {
  color: var(--placeholder);
}

input[type="text"]:focus,
input[type="search"]:focus,
input[type="email"]:focus,
input[type="password"]:focus,
input[type="tel"]:focus,
input[type="url"]:focus,
input:not([type]):focus {
  border-bottom-color: var(--primary);
  border-bottom-width: 3px;
}

select:active:not(:disabled) {
  background-color: var(--color-control-active);
}

select option:active:not(:disabled) {
  background-color: var(--color-control-active);
}

select option:checked:not(:disabled) {
  background-color: var(--color-control-active);
}

select:disabled {
  background-color: var(--color-control-disabled);
  color: var(--text-disabled);
}

input:disabled {
  background-color: var(--color-control-disabled);
  color: var(--text-disabled);
}
input:disabled::placeholder,
select:disabled::picker-icon {
  color: var(--text-disabled);
}

// C̀ components

.c-surface {
  background-color: var(--color-surface);
}
.c-surface-emphasis {
  background-color: var(--color-surface-emphasis);
}
