@use 'sass:meta';

@function light-dark-oklch($argument-1, $argument-2: null, $alpha: null) {
  @if meta.type-of($argument-1) == 'map' {
    $light: map-get($argument-1, light);
    $dark: map-get($argument-1, dark);

    $light-l: map-get($light, l);
    $light-c: if(map-has-key($light, c), map-get($light, c), var(--base__chroma));
    $light-h: if(map-has-key($light, h), map-get($light, h), var(--base__hue));
    $light-a: if($alpha != null, $alpha, if(map-has-key($light, a), map-get($light, a), 1));

    $dark-l: map-get($dark, l);
    $dark-c: if(map-has-key($dark, c), map-get($dark, c), var(--base__chroma));
    $dark-h: if(map-has-key($dark, h), map-get($dark, h), var(--base__hue));
    $dark-a: if($alpha != null, $alpha, if(map-has-key($dark, a), map-get($dark, a), 1));

    $light-color: oklch($light-l $light-c $light-h / $light-a);
    $dark-color: oklch($dark-l $dark-c $dark-h / $dark-a);

    @return light-dark($light-color, $dark-color);
  } @else if $argument-2 != null {
    $light-color: oklch(
      $argument-1 var(--base__chroma) var(--base__hue) / if($alpha != null, $alpha, 1)
    );
    $dark-color: oklch(
      $argument-2 var(--base__chroma) var(--base__hue) / if($alpha != null, $alpha, 1)
    );
    @return light-dark($light-color, $dark-color);
  } @else {
    @error "Invalid arguments for light-dark-oklch";
  }
}
@mixin outline-animation {
  outline: solid var(--color__focus-outline);
  animation: var(--outline-animation);
}

:root {
  // Variables follow CEM naming: Category__Element--Modifier
  // BEM-inspired convention for CÌ€-style

  --base__hue: 36;
  --base__saturation: 0%;
  --base__chroma: 0.018;
  --base__spacing: 0.2rem;

  --color__background: #{light-dark-oklch(100%, 20%)};
  --color__text: #{light-dark-oklch(28%, 90%)};
  --color__text-link: light-dark(
    oklch(28% 0.15 var(--base__hue)),
    oklch(90% 0.15 var(--base__hue))
  );
  --color__text-disabled: #{light-dark-oklch(28%, 90%, 0.5)};
  --color__text-placeholder: #{light-dark-oklch(28%, 90%, 0.5)};

  --color__focus-outline: #{light-dark-oklch(60%, 75%)};

  --color__control-surface: #{light-dark-oklch(90%, 24%)};
  --color__control-surface-emphasis: #{light-dark-oklch(86%, 26%)};
  --color__control--hover: #{light-dark-oklch(80%, 32%)};
  --color__control--active: #{light-dark-oklch(74%, 36%)};
  --color__control--disabled: #{light-dark-oklch(90%, 30%)};

  --color__scrollbar-surface: #{light-dark-oklch(80%, 28%)};
  --color__scrollbar-surface--hover: #{light-dark-oklch(64%, 34%)};
  --color__scrollbar-surface--active: #{light-dark-oklch(60%, 36%)};

  --color__selection-background: #{light-dark-oklch(25%, 85%)};
  --color__selection-text: #{light-dark-oklch(100%, 16%)};

  --color__border-divider: #{light-dark-oklch(54%, 68%)};
  --color__border-divider--opaque: #{light-dark-oklch(64%, 34%, 0.5)};

  --color__surface: #{light-dark-oklch(95%, 15%)};
  --color__surface--emphasis: #{light-dark-oklch(92%, 26%)};

  // ---

  --font-body:
    'Work Sans', Roboto, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen, Ubuntu,
    Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  --font-mono: 'Roboto Mono', monospace;
  --outline-animation: outline 0.5s cubic-bezier(0.2, 0, 0, 1) 1 forwards;

  --z-backdrop: 500;
  --z-dropdown: 1000;
  --z-overlay: 2000;
  --z-modal: 3000;
  --z-tooltip: 4000;
  --z-popup: 5000;
  --z-highest: 99999;

  --spacing-A: calc(var(--base__spacing) * 1.2);
  --spacing-B: calc(var(--base__spacing) * 1.6);
  --spacing-C: calc(var(--base__spacing) * 3.2);
  --spacing-D: calc(var(--base__spacing) * 3.8);
  --spacing-E: calc(var(--base__spacing) * 14);

  --spacing-full: 999999px;

  --seconds-S: 1s;
  --seconds-M: 1.2s;
  --seconds-L: 2.6s;

  --min-dimension: 2.444444444444444rem;
  --min-icon-dimension: 1.666666666666667rem;

  --width-small: 312px;
  --width-ample: 448px;
  --width-medium: 640px;

  --shadow-subtle: 0 0 20px hsl(0, 0%, 0%, 0.07);
  --cb-smooth: cubic-bezier(0.5, 0.5, 0, 1);

  // ---

  --blur-base: 0.2rem;
  --blur-A: var(--blur-base);
  --blur-B: calc(var(--blur-base) * 2);
  --blur-C: calc(var(--blur-base) * 4);
}

:root[data-config-disable-blur] {
  --blur-base: 0;
}

:root {
  user-select: none;
  color-scheme: light dark;
  font-family: var(--font-body);
  font-size: 1.125rem;
  color: var(--color__text);
  interpolate-size: allow-keywords;
  letter-spacing: 0;
  word-spacing: 0;
  line-height: 1.5;
  font-weight: 400;
}

@media only screen and (min-width: 768px) {
  ::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }
}

@media only screen and (max-width: 768px) {
  ::-webkit-scrollbar {
    width: 0;
    height: 0;
  }
}

::-webkit-scrollbar-thumb {
  background-color: var(--color__scrollbar-surface);
  border-radius: 10px;
  cursor: grab;
}

@media (hover: hover) {
  ::-webkit-scrollbar-thumb:hover {
    background-color: var(--color__scrollbar-surface--hover);
  }
}

::-webkit-scrollbar-thumb:active {
  background-color: var(--color__scrollbar-surface--active);
  cursor: grabbing;
}

::-webkit-scrollbar-track {
  background-color: transparent;
}

::-webkit-scrollbar-corner {
  background-color: transparent;
}

:root,
html,
body {
  margin: 0;
  height: 100%;
  height: 100vh;
  height: 100dvh;
  overflow: hidden;
  text-align: left;
}

body {
  background-color: var(--color__background);
}

*,
*::before,
*::after {
  box-sizing: border-box;
  color: inherit;
  font-size: inherit;
}

::selection {
  background-color: var(--color__selection-background);
  color: var(--color__selection-text);
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin-block: 0.8rem;
  user-select: text;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: bold;
}

h1 {
  font-size: 2.6rem;
}

h2 {
  font-size: 2.2rem;
}

h3 {
  font-size: 1.8rem;
}

h4 {
  font-size: 1.4rem;
}

h5 {
  font-size: 1.2rem;
}

p {
  font-size: 1rem;
}

small {
  font-size: 0.833rem;
}

.very-small {
  font-size: 0.64rem;
}

:root:has(body#output-container) {
  --ptop: calc(var(--spacing-C) + var(--spacing-C) - var(--spacing-A));
  /* A value to account for Perchance's UI's toolbar */
}

:is(button, .button, select, option, input, a):focus-visible {
  @include outline-animation();
}

button:not([disabled]),
.button:not([disabled]),
input:not([disabled]),
optgroup:not([disabled]),
select:not([disabled]),
textarea:not([disabled]) {
  color: inherit;
}

label {
  cursor: pointer;
}

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  border: none;
  background: none;
  padding: var(--spacing-C);
}

input,
textarea,
select {
  background-color: var(--color__control-surface);
  border-radius: 0;
  outline: none;
}

textarea {
  resize: vertical;
}

button,
a {
  cursor: pointer;
}

a {
  color: var(--color__text-link);
  border-radius: var(--spacing-C);
  text-decoration: underline;
}

button:disabled,
input:disabled,
select:disabled,
.button:disabled {
  cursor: default;
  color: var(--color__text-disabled);
}

table {
  width: 100%;
  border-collapse: collapse;
}

th,
td {
  text-align: left;
  padding: 0.6rem;
}

img {
  max-width: 100%;
  height: auto;
}

blockquote {
  margin: 1rem 0;
  padding: 0.8rem;
  border-left: 4px solid #ccc;
  font-style: italic;
}

code {
  font-family: 'Roboto Mono', monospace;
  font-size: 0.875rem;
  background-color: var(--color__surface--emphasis);
  padding: 0.2rem 0.4rem;
  border-radius: var(--spacing-B);
}

hr {
  width: 100%;
  border: 0;
  border-top: 2px solid var(--color__border-divider);
}

fieldset {
  border: 1px solid #ccc;
  padding: 1rem;
  margin: 1rem 0;
}

legend {
  font-weight: bold;
}

c-accordian {
  display: flex;
  flex-direction: column;
}

c-accordian .head {
  min-height: 54px;
}

.backdrop {
  opacity: 0;
  visibility: hidden;
  z-index: var(--z-backdrop);
  background-color: hsl(0 0% 0% / 70%);
  backdrop-filter: var(--blur-B);
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  transition-property: option, visibility;
  transition-duration: 280ms;
  transition-timing-function: cubic-bezier(0.4, 0.8, 0.5, 1);
}

.backdrop--show {
  opacity: 1;
  visibility: visible;
}

.fade-close {
  animation: fade-close var(--seconds-S) var(--cb-smooth) forwards;
}

.fade-open {
  animation: fade-open var(--seconds-S) var(--cb-smooth) forwards;
}

span[class^='i-'] {
  font-weight: normal;
  font-style: normal;
  font-size: var(--min-icon-dimension);
  line-height: 1.5;
  letter-spacing: normal;
  text-transform: none;
  display: inline-flex;
  width: var(--min-icon-dimension);
  height: var(--min-icon-dimension);
  overflow: hidden;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
}

@media (prefers-reduced-motion: no-preference) {
  dialog {
    position: fixed !important;
    opacity: 0;
    animation: fade-out 0.2s forwards;
    transition-behavior: allow-discrete;

    &[open] {
      animation: fade-in 0.2s forwards;

      @starting-style {
        opacity: 0;
      }
    }
  }
}

:root:not(.dev-mode) #perchance-error-indicator {
  display: none !important;
}

.perchance-error-background {
  opacity: 0.8 !important;
}

.perchance-error-content-wrapper {
  font-family: var(--font-body) !important;
  color: var(--color__text) !important;
  background-color: var(--color__surface) !important;
  border-radius: var(--spacing-D) !important;
  overflow: hidden !important;
}

.perchance-error-content-wrapper p {
  background-color: var(--color__surface--emphasis) !important;
  color: var(--color__text) !important;
}

.perchance-error-content-wrapper button {
  color: black !important;
}

.perchance-error-content-wrapper button::before {
  content: '';
  position: absolute;
  inset: 0;
}

.perchance-error-modal-footer {
  padding: var(--spacing-C) !important;
}

.perchance-error-content-wrapper button:focus-visible {
  @include outline-animation();
}
.perchance-error-stream {
  user-select: auto !important;
}

.perchance-chat-container {
  display: flex;
  height: 480px;
  width: 440px;
}

.perchance-chat-container > * {
  width: 100% !important;
  height: 100% !important;
  flex: 1;
}

@media (prefers-reduced-motion: no-preference) {
  @keyframes outline {
    0% {
      outline-width: 0;
    }

    50% {
      outline-width: 8px;
    }

    100% {
      outline-width: 3px;
    }
  }
}

@keyframes ripple-animation {
  to {
    transform: scale(4);
    opacity: 1;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fade-close {
  from {
    opacity: 1;
    visibility: visible;
  }

  to {
    opacity: 0;
    visibility: hidden;
  }
}
@keyframes fade-open {
  from {
    opacity: 0;
    visibility: hidden;
  }

  to {
    opacity: 1;
    visibility: visible;
  }
}

@keyframes scale-fade-close {
  from {
    opacity: 1;
    visibility: visible;
    scale: 1;
  }

  to {
    opacity: 0;
    visibility: hidden;
    scale: 0.995;
  }
}
@keyframes scale-fade-open {
  from {
    opacity: 0;
    visibility: hidden;
    scale: 0.975;
  }

  to {
    opacity: 1;
    visibility: visible;
    scale: 1;
  }
}

@media not (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after,
  *::placeholder {
    transition-property:
      background, color, outline, opacity, scale, transform, filter, backdrop-filter, padding, gap,
      margin, border-radius, width, height, box-shadow, border, left, right, top, bottom, font-size,
      font-weight, letter-spacing, word-spacing, line-height, min-width, max-width, min-height,
      max-height, z-index, visibility, display, background-color, background-image, background-size,
      background-position, background-repeat, border-color, border-width, border-style, border-top,
      border-right, border-bottom, border-left, border-top-left-radius, border-top-right-radius,
      border-bottom-right-radius, border-bottom-left-radius, outline-color, outline-width,
      outline-style, text-shadow, text-decoration, text-decoration-color, text-decoration-style,
      text-decoration-thickness, text-underline-offset, text-transform, font-family, font-style,
      font-variant, font-stretch, font-feature-settings, font-variation-settings, filter,
      backdrop-filter, box-shadow, opacity !important;
    transition-duration: 0.2s !important;
    transition-timing-function: var(--cb-smooth) !important;
  }
}

button,
.button,
input,
select,
textarea {
  min-width: var(--min-dimension, 44px);
  min-height: var(--min-dimension, 44px);
}

::placeholder {
  color: var(--color__text-placeholder);
}

textarea {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  color: inherit;
  text-align: inherit;
  border-radius: var(--spacing-C);
  margin: 0;
  padding: var(--spacing-C);
  resize: vertical;
  outline: none !important;
}

input,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  color: inherit;
  text-align: inherit;
  border-radius: var(--spacing-C);
  margin: 0;

  @media (hover: hover) {
    &:not(:disabled):hover {
      background-color: var(--color__control--hover);
    }
  }
}

/* Button */

button,
.button {
  --rounding: calc(var(--base__spacing) * 4.5);
  --hue: var(--base__hue);
  --chroma: var(--base__chroma);
  --l__action-suggested--light: 84%;
  --l__action-suggested--dark: 32%;
  --l__hover--light: 76%;
  --l__hover--dark: 36%;
  --l__active--light: 70%;
  --l__active--dark: 40%;
  --color__action-suggested: #{light-dark-oklch(
      var(--l__action-suggested--light),
      var(--l__action-suggested--dark)
    )};
  --color__hover: #{light-dark-oklch(var(--l__hover--light), var(--l__hover--dark))};
  --color__active: #{light-dark-oklch(var(--l__active--light), var(--l__active--dark))};
  color: var(--button-text, inherit);
  display: inline-flex;
  min-width: var(--min-dimension, 44px);
  min-height: var(--min-dimension, 44px);
  border-radius: var(--rounding);
  justify-content: center;
  position: relative;
  align-items: center;
  cursor: pointer;
  padding: 0.4rem 0.8rem;
  gap: 8px;
  outline: none;
  text-decoration: none;

  &.button--icon {
    padding: 0;
    min-width: var(--min-dimension, 44px);
    min-height: var(--min-dimension, 44px);
    width: var(--min-dimension, 44px);
    height: var(--min-dimension, 44px);
    max-width: var(--min-dimension, 44px);
    max-height: var(--min-dimension, 44px);
  }

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    /* This is to ensure buttons are clickable at the edges even
    if their corners are hidden due to the border-radius */
  }

  &,
  &:disabled {
    background-color: transparent;
  }

  &.button--suggested-action {
    background-color: var(--color__action-suggested);
  }

  @media (hover: hover) {
    &:not(:disabled):hover {
      background-color: var(--color__hover);
    }
  }

  &:active:not(:disabled) {
    background-color: var(--color__active);
  }
}

input {
  caret-color: var(--color__text);
  outline-color: var(--primary);
}

input[type='text'],
input[type='search'],
input[type='email'],
input[type='password'],
input[type='tel'],
input[type='url'],
input:not([type]) {
  outline: none;
  border-radius: var(--spacing-C);
  border: 0 solid transparent;
  animation: none;
}

input[type='range'] {
  width: 100%;
  cursor: pointer;
  border: none;
  margin: 0;
  padding: 0;
  min-height: auto;
}

select {
  background-color: var(--color__control-surface);
  border: none;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
}

select,
::picker(select) {
  appearance: base-select;
  border: none;
  outline: none;
}

::picker(select) {
  margin-block: var(--spacing-B);
  background-color: var(--color__control-surface-emphasis);
  border-radius: var(--spacing-C);
  padding: var(--spacing-B);
  cursor: default;
  scrollbar-color: var(--color__scrollbar-surface);
  scrollbar-width: none;
}

select option {
  border: none;
  padding: var(--spacing-B);
  border-radius: var(--spacing-B);
  /* background-color: var(--color__surface); */
  cursor: pointer;
  min-width: var(--min-dimension, 44px);
  min-height: var(--min-dimension, 44px);
}

select option::checkmark {
  display: none;
}

select option:not(:last-child) {
  margin-bottom: var(--spacing-B);
}

select::picker-icon {
  color: var(--color__text);
}

select:open::picker-icon {
  rotate: 180deg;
}

select option:hover:not(:disabled) {
  background-color: transparent;
  /* This is to prevent browsers from applying
  a hover effect in the shadow DOM internals  */
}

@media (hover: hover) {
  select:hover:not(:disabled) {
    background-color: var(--color__control--hover);
  }
  select option:hover:not(:disabled) {
    background-color: var(--color__control--hover);
  }
}

input::placeholder {
  color: var(--color__text-placeholder);
}

select option:active:not(:disabled) {
  background-color: var(--color__control--active);
}

select option:checked:not(:disabled) {
  background-color: var(--color__control--active);
}

select:disabled {
  background-color: var(--color__control--disabled);
  color: var(--color__text-disabled);
}

input:disabled {
  background-color: var(--color__control--disabled);
  color: var(--color__text-disabled);
}
input:disabled::placeholder,
select:disabled::picker-icon {
  color: var(--color__text-disabled);
}

// CÌ€ components

.c-surface {
  background-color: var(--color__surface);
}
.c-surface--emphasis {
  background-color: var(--color__surface--emphasis);
}
